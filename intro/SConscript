#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os.path

Import('env')

## A builder for the pdf and pdf_tex files generated by inkscape from
## svg files.  These are necessary when there's text in the figures and
## we want LaTeX to handle the text (otherwise, a PDF would be enough).
def add_tex_to_target(target, source, env):
  """inkscape called with --export-latex will create another file with
     _tex appended so add it to lisr of targets."""
  target.append(str(target[0]) + "_tex")
  return target, source

pdf_tex_bld = Builder(action='inkscape -Dz --export-latex -A $TARGET $SOURCE',
                      suffix='.pdf',
                      src_suffix='.svg',
                      emitter=add_tex_to_target)
env.Append(BUILDERS = {'PDF_TEX' : pdf_tex_bld})


def path4figure(fname=""):
  return os.path.join("figures", fname)

def path4data(fname=""):
  return os.path.join("data", fname)

def path4script(fname=""):
  return os.path.join("scripts", fname)

def path4result(fname=""):
  return os.path.join("results", fname)


## The actual dependencies for the thesis.
intro = []

##
## Figures to be created
##

intro.append(env.PDF_TEX(path4figure('chromatin-hierarchy-alberts-3rd-ed.svg')))


##
## The scripts
##

nucleosome_views_script = env.File(path4script("nucleosome-views.py"))

nucleosome_views = {
  'H2A' : 'nucleosome-h2a',
  'H2B' : 'nucleosome-h2b',
  'H2A-H2B' : 'nucleosome-h2a-h2b-dimer',
}

nucleosome_2cv5 = path4data('2cv5.pdb')
for view, fname in nucleosome_views.iteritems():
  target = path4result(fname + '.png')
  view_fig = env.Command(target=target, source=nucleosome_2cv5,
                         SCRIPT=nucleosome_views_script,
                         action='pymol -cq $SCRIPT -- $SOURCE %s $TARGET' % view)
  intro.append(view_fig)


##
## "Configure" - check that we have all the required tools installed
##

def CheckProg(context, prog_name):
  context.Message("Checking for %s..." % prog_name)
  is_ok = context.env.WhereIs(prog_name)
  context.Result(is_ok)
  return is_ok

conf = Configure (
  env,
  custom_tests = {
    "CheckProg" : CheckProg,
  },
)

## How the fuck is this not the default in SCons?
if not env.GetOption('help'):
  progs = {
    "pymol"
      : "pymol must be installed to draw nucleosome structure",
  }

  for p_name, p_desc in progs.iteritems():
    if not conf.CheckProg(p_name):
      print p_desc
      Exit(1)

env = conf.Finish()

Return (['intro'])
