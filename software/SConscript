#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os.path

Import('env')

## The man page for our program which will appear as an appendix.
## The ugly DUMMY is due to some bugs on pod2latex:
##  1) We need to skip encoding commands that pod2latex does not
##     understand.  See https://github.com/timj/perl-Pod-LaTeX/issues/3
##
##  2) We need a temporary file with the pod extension because:
##      - pod2latex does not accept stdout
##      - pod2latex will search for pod documents meaning that it
##        needs pod extension or a file with executable permissions
##        so pod2latex --out ... <(grep out encoding)
##     See https://github.com/timj/perl-Pod-LaTeX/issues/4
genbank_ref_extractor_man = env.Command(
  source = env.WhereIs('bp_genbank_ref_extractor'),
  target = os.path.join('results', 'bp_genbank_ref_extractor-man.tex'),
  DUMMY = env.File(os.path.join('results', 'bp_genbank_ref_extractor.pod')),
  action = ("perldoc -uT $SOURCE | grep -v '^=encoding ' > $DUMMY"
            " && pod2latex --sections '!(FEEDBACK|AUTHOR|COPYRIGHT)'"
            "              --out $TARGET $DUMMY"
            " && rm $DUMMY"),
)

##
## "Configure" - check that we have the required programs
##

def CheckProg(context, prog_name):
  context.Message("Checking for %s..." % prog_name)
  is_ok = context.env.WhereIs(prog_name)
  context.Result(is_ok)
  return is_ok

conf = Configure(
  env,
  custom_tests = {
    "CheckProg" : CheckProg
  }
)

## How the fuck is this not the default in SCons?
if not env.GetOption('help'):
  progs = {
    "bp_genbank_ref_extractor"
      : "bp_genbank_ref_extractor - BioPerl's Bio-EUtilities application",
    "perldoc"
      : "perldoc is required to create manual for bp_genbank_ref_extractor",
    "pod2latex"
      : "pod2latex is required to create manual for bp_genbank_ref_extractor",
  }

  for p_name, p_desc in progs.iteritems():
    if not conf.CheckProg(p_name):
      print p_desc
      Exit(1)

env = conf.Finish()

Return(['genbank_ref_extractor_man'])
