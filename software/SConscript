#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os.path

Import('env')

## the man page for our program which will appear as an appendix
genbank_ref_extractor_man = env.Command(
  source = env.WhereIs('bp_genbank_ref_extractor'),
  target = os.path.join('results', 'bp_genbank_ref_extractor-man.tex'),
  action = "pod2latex --out $TARGET $SOURCE",
)

##
## "Configure" - check that we have the required programs
##

def CheckProg(context, prog_name):
  context.Message("Checking for %s..." % prog_name)
  is_ok = context.env.WhereIs(prog_name)
  context.Result(is_ok)
  return is_ok

conf = Configure(
  env,
  custom_tests = {
    "CheckProg" : CheckProg
  }
)

## How the fuck is this not the default in SCons?
if not env.GetOption('help'):
  progs = {
    "bp_genbank_ref_extractor"
      : "bp_genbank_ref_extractor - BioPerl's Bio-EUtilities application",
    "pod2latex"
      : "pod2latex is required to create manual for bp_genbank_ref_extractor",
  }

  for p_name, p_desc in progs.iteritems():
    if not conf.CheckProg(p_name):
      print p_desc
      Exit(1)

env = conf.Finish()

Return(['genbank_ref_extractor_man'])
